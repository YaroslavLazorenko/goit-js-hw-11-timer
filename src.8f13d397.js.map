{"version":3,"sources":["js/refs.js","index.js"],"names":["startBtn","document","getElementById","pauseBtn","stopBtn","COUNT_DELAY","refs","CountdownTimer","constructor","selector","targetDate","timerId","isCounting","getRefs","daysSpan","querySelector","hoursSpan","minsSpan","secsSpan","startCount","setInterval","deltaTime","Date","now","days","Math","floor","hours","mins","secs","insertValues","textContent","pad","value","String","padStart","pauseCount","clearInterval","stopCount","timer1","addEventListener","bind"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,SAAUC,SAASC,eAAe,aAClCC,SAAUF,SAASC,eAAe,aAClCE,QAASH,SAASC,eAAe,aAHpB,QAAA,QAAA;;ACuEf,aAvEA,IAAA,EAAA,EAAA,QAAA,iBAuEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GArEA,MAAMG,EAAc,KACd,SAAEL,EAAF,SAAYG,EAAZ,QAAsBC,GAAYE,EAAxC,QAEA,MAAMC,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbJ,KAAAA,KAAO,KACPK,KAAAA,QAAU,KACVC,KAAAA,YAAa,EAGpBC,UACOP,KAAAA,KAAO,CACVQ,SAAUb,SAASc,iBAAiB,KAAKN,oCACzCO,UAAWf,SAASc,iBAAiB,KAAKN,qCAC1CQ,SAAUhB,SAASc,iBAAiB,KAAKN,oCACzCS,SAAUjB,SAASc,iBAAiB,KAAKN,qCAI7CU,aACON,KAAAA,UACA,KAAKD,aACHA,KAAAA,YAAa,EACbD,KAAAA,QAAUS,YAAY,KACnBC,MAAAA,EAAY,KAAKX,WAAaY,KAAKC,MACnCC,EAAOC,KAAKC,MAAML,EAAa,OAC/BM,EAAQF,KAAKC,MAAOL,EAAa,MAAyB,MAC1DO,EAAOH,KAAKC,MAAOL,EAAa,KAAoB,KACpDQ,EAAOJ,KAAKC,MAAOL,EAAa,IAAc,KAE/CS,KAAAA,aAAaN,EAAMG,EAAOC,EAAMC,IACpCxB,IAIPyB,aAAaN,EAAMG,EAAOC,EAAMC,GACzBvB,KAAAA,KAAKQ,SAASiB,YAAc,KAAKC,IAAIR,GACrClB,KAAAA,KAAKU,UAAUe,YAAc,KAAKC,IAAIL,GACtCrB,KAAAA,KAAKW,SAASc,YAAc,KAAKC,IAAIJ,GACrCtB,KAAAA,KAAKY,SAASa,YAAc,KAAKC,IAAIH,GAG5CG,IAAIC,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCC,aACEC,cAAc,KAAK1B,SACdC,KAAAA,YAAa,EAGpB0B,YACED,cAAc,KAAK1B,SACdmB,KAAAA,aAAa,EAAG,EAAG,EAAG,GACtBlB,KAAAA,YAAa,GAItB,MAAM2B,EAAS,IAAIhC,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIY,KAAK,iBAGvBiB,EAAOpB,aAEPnB,EAASwC,iBAAiB,QAASD,EAAOpB,WAAWsB,KAAKF,IAC1DpC,EAASqC,iBAAiB,QAASD,EAAOH,WAAWK,KAAKF,IAC1DnC,EAAQoC,iBAAiB,QAASD,EAAOD,UAAUG,KAAKF","file":"src.8f13d397.js","sourceRoot":"../src","sourcesContent":["export default {\n  startBtn: document.getElementById('start-btn'),\n  pauseBtn: document.getElementById('pause-btn'),\n  stopBtn: document.getElementById('stop-btn'),\n};\n","import refs from './js/refs.js';\n\nconst COUNT_DELAY = 1000;\nconst { startBtn, pauseBtn, stopBtn } = refs;\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.refs = null;\n    this.timerId = null;\n    this.isCounting = false;\n  }\n\n  getRefs() {\n    this.refs = {\n      daysSpan: document.querySelector(`${this.selector} span[data-value=\"days\"]`),\n      hoursSpan: document.querySelector(`${this.selector} span[data-value=\"hours\"]`),\n      minsSpan: document.querySelector(`${this.selector} span[data-value=\"mins\"]`),\n      secsSpan: document.querySelector(`${this.selector} span[data-value=\"secs\"]`),\n    };\n  }\n\n  startCount() {\n    this.getRefs();\n    if (!this.isCounting) {\n      this.isCounting = true;\n      this.timerId = setInterval(() => {\n        const deltaTime = this.targetDate - Date.now();\n        const days = Math.floor(deltaTime / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((deltaTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const mins = Math.floor((deltaTime % (1000 * 60 * 60)) / (1000 * 60));\n        const secs = Math.floor((deltaTime % (1000 * 60)) / 1000);\n\n        this.insertValues(days, hours, mins, secs);\n      }, COUNT_DELAY);\n    }\n  }\n\n  insertValues(days, hours, mins, secs) {\n    this.refs.daysSpan.textContent = this.pad(days);\n    this.refs.hoursSpan.textContent = this.pad(hours);\n    this.refs.minsSpan.textContent = this.pad(mins);\n    this.refs.secsSpan.textContent = this.pad(secs);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  pauseCount() {\n    clearInterval(this.timerId);\n    this.isCounting = false;\n  }\n\n  stopCount() {\n    clearInterval(this.timerId);\n    this.insertValues(0, 0, 0, 0);\n    this.isCounting = false;\n  }\n}\n\nconst timer1 = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jan 7, 2022'),\n});\n\ntimer1.startCount();\n\nstartBtn.addEventListener('click', timer1.startCount.bind(timer1));\npauseBtn.addEventListener('click', timer1.pauseCount.bind(timer1));\nstopBtn.addEventListener('click', timer1.stopCount.bind(timer1));\n"]}